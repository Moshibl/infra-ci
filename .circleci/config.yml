version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  # aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
commands:

  destroy_environment:
    steps:
      - run:
          name: Destroy Environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1
            
  #           aws ec2 describe-instances \
  #             --query 'Reservations[*].Instances[*].PublicIpAddress' \
  #             --filters "Name=tag:Project,Values=udacity" \
  #             --output text >> inventory.txt
  # configure_infrastructure:
  #   docker:
  #     - image:  cimg/python:3.10
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprints: ["8a:d6:28:5f:a4:83:fd:e8:2a:3c:e5:3a:0f:54:34:e7"]
  #     - run:
  #         name: Install Ansible
  #         command: |
  #           pip install ansible
  #     - run:
  #         name: Run Playbook and Configure Server
  #         command: |
  #           ansible-playbook -i inventory.txt main-infra.yml
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Test job
          command: return 1

      - destroy_environment
      # - run: apk add --update curl
      # - run: 
      #     name: smoke test
      #     command: |
      #       URL="https://blog.udacity.com/"
      #       if curl -s --head ${URL}
      #       then
      #         return 0
      #       else
      #         return 1
      #       fi

workflows:
  my_workflow:
      jobs:
        - create_infrastructure
        # - configure_infrastructure
            # requires:
            #   - create_infrastructure
        - smoke_test:
            requires:
              - create_infrastructure